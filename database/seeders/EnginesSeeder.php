<?php

namespace Database\Seeders;

use App\Models\Assurance;
use App\Models\Engine;
use App\Models\Visite;
use App\Support\Database\StatesClass;
use Carbon\Carbon;
use Illuminate\Database\Seeder;
use Illuminate\Support\Str;

class EnginesSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $plates = [
            'TG 1236-AF',
            'TG 1364-AC',
            'TG 1995-AS',
            'TG 1242-AX',
            'TG 1111-AG',
            'TG 0003-AZ',
            'TG 3000-AR',
            'TG 1036-AB',
            'TG 2468-AF',
            'TG 7895-AC',
            'TG 5671-AS',
            'TG 8321-AX',
            'TG 9547-AG',
            'TG 3214-AZ',
            'TG 6578-AR',
            'TG 2390-AB',
            'TG 1122-AF',
            'TG 3344-AC',
            'TG 5566-AS',
            'TG 7788-AX',
            'TG 9900-AG',
            'TG 1123-AZ',
            'TG 3345-AR',
            'TG 5567-AB',
            'TG 7789-AF',
            'TG 9901-AC',
            'TG 1124-AS',
            'TG 3346-AX',
            'TG 5568-AG',
            'TG 7790-AZ',
            'TG 9902-AR',
            'TG 1125-AB',
            'TG 3347-AF',
            'TG 5569-AC',
            'TG 7791-AS',
            'TG 9903-AX',
            'TG 1126-AF',
            'TG 3348-AC',
            'TG 5570-AS',
            'TG 7792-AX',
            'TG 9904-AG',
            'TG 1127-AZ',
            'TG 3349-AR',
            'TG 5571-AB',
            'TG 7793-AF',
            'TG 9905-AC',
            'TG 1128-AS',
            'TG 3350-AX',
            'TG 5572-AG',
            'TG 7794-AZ',
            'TG 9906-AR',
            'TG 1129-AB',
            'TG 3351-AF',
            'TG 5573-AC',
            'TG 7795-AS',
            'TG 9907-AX',
            'TG 1130-AF',
            'TG 3352-AC',
            'TG 5574-AS',
            'TG 7796-AX',
            'TG 9908-AG',
            'TG 1131-AZ',
            'TG 3353-AR',
            'TG 5575-AB',
            'TG 7797-AF',
            'TG 9909-AC',
            'TG 1132-AS',
            'TG 3354-AX',
            'TG 5576-AG',
            'TG 7798-AZ',
            'TG 9910-AR',
            'TG 1133-AB',
            'TG 3355-AF',
            'TG 5577-AC',
            'TG 7799-AS',
            'TG 9911-AX',
            'TG 1134-AF',
            'TG 3356-AC',
            'TG 5578-AS',
            'TG 7800-AX',
            'TG 9912-AG',
            'TG 1135-AZ',
            'TG 3357-AR',
            'TG 5579-AB',
            'TG 7801-AF',
            'TG 9913-AC',
            'TG 1136-AS',
            'TG 3358-AX',
            'TG 5580-AG',
            'TG 7802-AZ',
            'TG 9914-AR',
            'TG 1137-AB',
            'TG 3359-AF',
            'TG 5581-AC',
            'TG 7803-AS',
            'TG 9915-AX',
            'TG 1138-AF',
            'TG 3360-AC',
            'TG 5582-AS',
            'TG 7804-AX',
            'TG 9916-AG',
            'TG 1139-AZ',
            'TG 3361-AR',
            'TG 5583-AB',
            'TG 7805-AF',
            'TG 9917-AC',
            'TG 1140-AS',
            'TG 3362-AX',
            'TG 5584-AG',
            'TG 7806-AZ',
            'TG 9918-AR',
            'TG 1141-AB',
            'TG 3363-AF',
            'TG 5585-AC',
            'TG 7807-AS',
            'TG 9919-AX',
            'TG 1142-AF',
            'TG 3364-AC',
            'TG 5586-AS',
            'TG 7808-AX',
            'TG 9920-AG',
            'TG 1143-AZ',
            'TG 3365-AR',
            'TG 5587-AB',
            'TG 7809-AF',
            'TG 9921-AC',
            'TG 1144-AS',
            'TG 3366-AX',
            
        ];

        foreach ($plates as $key => $plate) {
            Engine::firstOrCreate([
                'modele_id' => mt_rand(1, 21),
                'power' => mt_rand(1, 100),
                'plate_number' => $plate,
                'type_id' => mt_rand(1, 5),
                'carburant_id' => mt_rand(1, 2),
                'state' => StatesClass::Activated()->value,
                'user_id' => 1,
                'updated_at_user_id' => 1,
                'assurances_mail_sent' => 0,
                'visites_mail_sent' => 0,
                'created_at' => now(),
                'updated_at' => now(),
                'carosserie' => 'Bâchée',
                'pl_ass' => 04,
                'poids_total_en_charge' => 955,
                'poids_a_vide' => 950,
                'poids_total_roulant' => null,
                'charge_utile' => 200,
                'largeur' => 120,
                'surface' => 123,
                'couleur' => '#852a2a',
                'numero_chassis' => Str::random(4),
                'moteur' => 05,
                'kilometrage_achat' => 25000,
                'departement_id' => mt_rand(1, 5),
                'numero_carte_grise' => Str::random(6),
                'date_aquisition' => today(),
            ]);

            Visite::create([
                'engine_id' => $key + 1,
                'date_initiale' => Carbon::now()->subDays(rand(1, 50)),
                'date_expiration' => Carbon::now()->addYear(),
                'user_id' => 1,
                'updated_at_user_id' => 1,
                'created_at' => now(),
                'updated_at' => now(),
                'state' => StatesClass::Activated()->value,
            ]);

            Assurance::create([
                'engine_id' => $key + 1,
                'date_debut' => Carbon::now()->subDays(rand(1, 50)),
                'date_fin' => Carbon::now()->addMonths(rand(1, 12)),
                'user_id' => 1,
                'updated_at_user_id' => 1,
                'created_at' => now(),
                'updated_at' => now(),
                'state' => StatesClass::Activated()->value,
            ]);
        }

        Visite::create([
            'engine_id' => $key + 1,
            'date_initiale' => Carbon::now()->subYear(),
            'date_expiration' => Carbon::now()->addDays(3),
            'user_id' => 1,
            'updated_at_user_id' => 1,
            'created_at' => now(),
            'updated_at' => now(),
            'state' => StatesClass::Activated()->value,
        ]);

        Assurance::create([
            'engine_id' => $key + 1,
            'date_debut' => Carbon::now()->subYear(),
            'date_fin' => Carbon::now()->addDays(3),
            'user_id' => 1,
            'updated_at_user_id' => 1,
            'created_at' => now(),
            'updated_at' => now(),
            'state' => StatesClass::Activated()->value,
        ]);
    }
}
